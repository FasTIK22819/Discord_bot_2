import discord
import os
import csv
from dotenv import load_dotenv
from discord.ext import commands
from discord.utils import get
from discord import FFmpegPCMAudio
from discord import TextChannel
from youtube_dl import YoutubeDL
from config import TOKEN
from flask import Flask
import disnake
import const
import sqlite3
from data import db_session
from data.user import User

app = Flask(__name__)
app.config['SECRET_KEY'] = 'yandexlyceum_secret_key'
user = User()


def main():
    db_session.global_init("db/music.db")
    app.run()


def test_orm_user():
    db_session.global_init("db/music.db")
    from data.user import User
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    print(spisok_mus)


if __name__ == '__main__':
    test_orm_user()

load_dotenv()
# –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥
client = commands.Bot(command_prefix='!', intents=discord.Intents.all())
players = {}


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–∏—Ç–∞
# –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∫ —Ä–∞–±–æ—Ç–µ
@client.event
async def on_ready():
    print(f'–ë–æ—Ç {client.user.name} –≥–æ—Ç–æ–≤ –ø–∞—Ö–∞—Ç—å!')


# –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±–æ—Ç–∞ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def join(ctx):
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice and voice.is_connected():
        await voice.move_to(channel)
        embed = discord.Embed(
            title="",
            color=0xe100ff,
            description=f"–≤—Ö–æ–¥")
        embed.set_thumbnail(
            url=f'https://cdna.artstation.com/p/assets/images/images/008/710/076/original/gabriel-casamasso-turntable.gif?1514763325')
        embed.set_footer(text=f"–ö–æ–º–∞–Ω–¥—É –∑–∞–ø—Ä–æ—Å–∏–ª {ctx.author.name}")
        await ctx.send(embed=embed)
    else:
        voice = await channel.connect()
        embed = discord.Embed(
            title="",
            color=0xe100ff,
            description=f"–≤—Ö–æ–¥")
        embed.set_thumbnail(
            url=f'https://cdna.artstation.com/p/assets/images/images/008/710/076/original/gabriel-casamasso-turntable.gif?1514763325')
        embed.set_footer(text=f"–ö–æ–º–∞–Ω–¥—É –∑–∞–ø—Ä–æ—Å–∏–ª {ctx.author.name}")
        await ctx.send(embed=embed)


# –∫–æ–º–∞–Ω–¥–∞ –∏–∑–≥–Ω–∞—Ç—å –±–æ—Ç–∞ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
@client.command()
async def leave(ctx):
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice and voice.is_connected():
        await voice.disconnect()


# –∫–ª–∞—Å—Å –∫–Ω–æ–ø–æ–∫
class MyView(discord.ui.View):
    def __init__(self, ctx):
        super().__init__()
        self.ctx = ctx

    # –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    @discord.ui.button(label="", row=1, style=discord.ButtonStyle.primary, emoji='‚è™')
    async def first_button_callback(self, interaction, button):
        await back_from_button(self.ctx)

    # –∫–Ω–æ–ø–∫–∞ —Å—Ç–æ–ø
    @discord.ui.button(label="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", row=1, style=discord.ButtonStyle.danger, emoji='‚è∫Ô∏è')
    async def stop_button(self, interaction, button):
        await stop_from_button(self.ctx)

    # –∫–Ω–æ–ø–∫–∞ –ø–∞—É–∑—ã
    @discord.ui.button(label="–ü–∞—É–∑–∞", row=1, style=discord.ButtonStyle.green, emoji='‚è∏Ô∏è')
    async def pause_button(self, interaction, button):
        await pause_from_button(self.ctx)

    # –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
    @discord.ui.button(label="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", row=1, style=discord.ButtonStyle.green, emoji='‚ñ∂Ô∏è')
    async def resume_button(self, interaction, button):
        await resume_from_button(self.ctx)

    # –∫–Ω–æ–ø–∫–∞ –≤–ø–µ—Ä–µ–¥
    @discord.ui.button(label="", row=1, style=discord.ButtonStyle.blurple, emoji='‚è©')
    async def second_button_callback(self, interaction, button):
        await forward_from_button(self.ctx)

    # –∫–Ω–æ–ø–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç
    @discord.ui.button(label="–ü–ª–µ–π–ª–∏—Å—Ç", row=2, style=discord.ButtonStyle.blurple, emoji='üé∂')
    async def list_button_callback(self, interaction, button):
        await playlist_from_button(self.ctx)


# –º–µ–Ω—é 2
class MyView_menu(discord.ui.View):
    def __init__(self, ctx):
        super().__init__()
        self.ctx = ctx

    # –∫–Ω–æ–ø–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç
    @discord.ui.button(label="–ü–ª–µ–π–ª–∏—Å—Ç", row=2, style=discord.ButtonStyle.blurple, emoji='üé∂')
    async def list_button_callback(self, interaction, button):
        await playlist_from_button(self.ctx)

    # –∫–Ω–æ–ø–∫–∞, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∏–≥—Ä–∞–µ—Ç 1-—è –ø–µ—Å–Ω—è –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞
    @discord.ui.button(label="–ü–ª–µ–π", row=3, style=discord.ButtonStyle.blurple, emoji='üéß')
    async def play_button_callback(self, interaction, button):
        await play_from_button(self.ctx)


# –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —Å URL-–∞–¥—Ä–µ—Å–∞ youtube
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def play(ctx, url, name_title=None):
    const.ctx_p = ctx
    YDL_OPTIONS = {'format': 'bestaudio', 'noplaylist': 'True'}
    FFMPEG_OPTIONS = {
        'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5', 'options': '-vn'}
    voice = get(client.voice_clients, guild=ctx.guild)

    # –≤—Ö–æ–¥ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
    try:
        channel = ctx.message.author.voice.channel
        if voice and voice.is_connected():
            await voice.move_to(channel)
        else:
            voice = await channel.connect()
    except Exception:
        await ctx.send('–ë–æ—Ç –ø–æ–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ø–µ—â–µ—Ä–µ(–∑–∞–π–¥–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª)')

    if not voice.is_playing():
        db_sess = db_session.create_session()
        musics = db_sess.query(User).all()
        spisok_mus = []
        spisok_title = []
        spisok_url = []
        for music in musics:
            spisok_mus.append([str(music).split()[1], str(music).split()[2]])
            spisok_title.append(str(music).split()[1])
            spisok_url.append(str(music).split()[2])
        for title in spisok_mus:
            if url == title[0]:
                url = title[1]
                const.play_mus = title[0]
                break
        try:
            with YoutubeDL(YDL_OPTIONS) as ydl:
                info = ydl.extract_info(url, download=False)
        except Exception:
            await ctx.send('–û—à–∏–±–∫–∞! –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∏–º–µ–Ω–∏')
        name = info['title']
        if name_title:
            if name_title not in spisok_title:
                if url not in spisok_url:
                    add = User(name=name_title, url=url)
                    db_sess.add(add)
                    db_sess.commit()

        URL = info['url']
        voice.play(discord.FFmpegPCMAudio(URL, executable="ffmpeg/ffmpeg.exe", **FFMPEG_OPTIONS))
        voice.is_playing()
        # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É
        embed = disnake.Embed(title='–¥–∏–¥–∂–µ–π', description=f"–º—É–∑—ã–∫–∞ {name}",
                              color=0x228b22)
        embed.set_thumbnail(
            url=f'https://i.pinimg.com/originals/82/83/c7/8283c7b7b68f765e2b3bf46fe9c3682f.gif')
        embed.add_field(name="–í–∫–ª—é—á–∏–ª:", value=f"@{ctx.author.name}")
        await ctx.send(embed=embed)
        await ctx.send(f'–û–ù–û –†–ê–ë–û–¢–ê–ï–¢!!! üîä (–∏–≥—Ä–∞–µ—Ç - {url}) üéµ', view=MyView(ctx))
    else:
        await ctx.send("–ë–æ—Ç —É–∂–µ –∏–≥—Ä–∞–µ—Ç –¥—Ä—É–≥—É—é –º—É–∑—ã–∫—É")
        return


# –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–ø—É—Å–∫ –ø–µ—Å–Ω–∏
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def forward(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    voice.stop()
    url = ''
    await ctx.channel.purge(limit=3)
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    for i in range(len(spisok_mus)):
        if spisok_mus[i][0] == const.play_mus:
            if i + 1 < len(spisok_mus):
                url = spisok_mus[i + 1][0]
                break
            else:
                url = spisok_mus[0][0]
    await play(ctx, url)


# –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–µ—Å–Ω—è
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def back(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    voice.stop()
    url = ''
    await ctx.channel.purge(limit=3)
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    for i in range(len(spisok_mus)):
        if spisok_mus[i][0] == const.play_mus:
            if i > 0:
                url = spisok_mus[i - 1][0]
                break
            else:
                url = spisok_mus[-1][0]
    await play(ctx, url)


# –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç
@client.command()
async def playlist(ctx):
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    m = []
    for mus in spisok_mus:
        mus = ' '.join(mus)
        m.append(mus)
    embed = disnake.Embed(title='üé∂',
                          color=0x228b22)
    embed.add_field(name="–ø–ª–µ–π–ª–∏—Å—Ç", value='\n'.join(m))
    await ctx.send(embed=embed)


@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def delete(ctx, title):
    try:
        db_sess = db_session.create_session()
        musics = db_sess.query(User).all()
        spisok_mus = []
        for music in musics:
            if title == str(music).split()[1]:
                spisok_mus.append(str(music).split()[1])
                print(123)
                db_sess.query(User).filter(User.name is title).delete()
                db_sess.commit()
        await ctx.send(f'–¢—Ä–µ–∫ {spisok_mus[0]} –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º "{title}" –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.')
    except Exception:
        await ctx.send('–ù–ï –£–î–ê–õ–û–°–¨ –£–î–ê–õ–ò–¢–¨. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –µ—Å—Ç—å –ª–∏ –æ–Ω–æ –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ')
        await playlist(ctx)


# –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def menu(ctx):
    await ctx.send(view=MyView_menu(ctx))


# –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–≤—è–∑–∏, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def resume(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    if not voice.is_playing():
        voice.resume()
        await ctx.send('–ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–∞—Ö–∞—Ç—å')


# –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def pause(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.pause()
        await ctx.send('–ë–æ—Ç –æ—Ç–¥—ã—Ö–∞–µ—Ç üîà')


# –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–≤—É–∫–∞
@client.command()
@commands.has_role("–∫–æ—Ä–æ–ª—å –æ–±–µ–∑—å—è–Ω")
async def stop(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.stop()
        await ctx.channel.purge(limit=2)
        await ctx.send(f'–ú—É–∑—ã–∫–∞ OF üîá')
        embed = disnake.Embed(title='–¥–∏–¥–∂–µ–π',
                              color=0x228b22)
        embed.set_thumbnail(
            url=f'https://yt3.googleusercontent.com/lc-EyUTVJPzpCUzuQwmLj'
                f'TM6itlMZ0-jhzXDFwA4bcBo8U6vbC58YsSUV1wY1l4HNZsNqHUEwQ=s900-c-k-c0x00ffffff-no-rj')
        embed.add_field(name="–í—ã–∫–ª—é—á–∏–ª:", value=f"@{ctx.author.name}")
        await ctx.send(embed=embed)


# ------—Ñ—É–Ω–∫—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫--------------------------------------------------------------------------------------------------
# –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
async def stop_from_button(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.stop()
        await ctx.channel.purge(limit=2)
        await ctx.send(f'–ú—É–∑—ã–∫–∞ OF üîá')
        embed = disnake.Embed(title='–¥–∏–¥–∂–µ–π',
                              color=0x228b22)
        embed.set_thumbnail(
            url=f'https://yt3.googleusercontent.com/lc-EyUTVJPzpCUzuQwmLj'
                f'TM6itlMZ0-jhzXDFwA4bcBo8U6vbC58YsSUV1wY1l4HNZsNqHUEwQ=s900-c-k-c0x00ffffff-no-rj')
        embed.add_field(name="–í—ã–∫–ª—é—á–∏–ª:", value=f"@{ctx.author.name}")
        await ctx.send(embed=embed)


# –ø—Ä–æ–ø—É—Å–∫ –ø–µ—Å–Ω–∏
async def forward_from_button(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    voice.stop()
    url = ''
    await ctx.channel.purge(limit=2)
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    for i in range(len(spisok_mus)):
        if spisok_mus[i][0] == const.play_mus:
            if i + 1 < len(spisok_mus):
                url = spisok_mus[i + 1][0]
                break
            else:
                url = spisok_mus[0][0]
    await play(ctx, url)


# –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–µ—Å–Ω—è
async def back_from_button(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    voice.stop()
    url = ''
    await ctx.channel.purge(limit=2)
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    for i in range(len(spisok_mus)):
        if spisok_mus[i][0] == const.play_mus:
            if i > 0:
                url = spisok_mus[i - 1][0]
                break
            else:
                url = spisok_mus[-1][0]
    await play(ctx, url)


# –ø–æ–∫–∞–∑–∞—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç
async def playlist_from_button(ctx):
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    m = []
    for mus in spisok_mus:
        mus = ' '.join(mus)
        m.append(mus)
    embed = disnake.Embed(title='üé∂',
                          color=0x228b22)
    embed.add_field(name="–ø–ª–µ–π–ª–∏—Å—Ç", value='\n'.join(m))
    await ctx.send(embed=embed)


@client.event
async def pause_from_button(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.pause()
        await ctx.send('–ë–æ—Ç –æ—Ç–¥—ã—Ö–∞–µ—Ç ')


@client.event
async def resume_from_button(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)
    if not voice.is_playing():
        voice.resume()
        await ctx.send('–ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–∞—Ö–∞—Ç—å')


# –∏–≥—Ä–∞–µ—Ç 1 –ø–µ—Å–Ω—é –∏–∑ –ø–ª–µ–ª–∏—Å—Ç–∞
async def play_from_button(ctx):
    db_sess = db_session.create_session()
    musics = db_sess.query(User).all()
    spisok_mus = []
    for music in musics:
        spisok_mus.append([str(music).split()[1], str(music).split()[2]])
    url = spisok_mus[0][0]
    await play(ctx, url)


# ----------------------------------------------------------------------------------------------------------------------


# –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞
@client.command()
async def clear(ctx, amount):
    await ctx.channel.purge(limit=int(amount))
    await ctx.send(f"–û—á–∏—Å—Ç–∫–∞ –º—É—Å–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (—É–¥–∞–ª–µ–Ω–æ {amount} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)", delete_after=5)


client.run(TOKEN)
